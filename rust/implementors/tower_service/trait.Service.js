(function() {var implementors = {};
implementors["tink_testing_server"] = [{"text":"impl&lt;T, B&gt; Service&lt;Request&lt;B&gt;&gt; for MetadataServer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Metadata,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HttpBody + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Error: Into&lt;StdError&gt; + Send + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, B&gt; Service&lt;Request&lt;B&gt;&gt; for KeysetServer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Keyset,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HttpBody + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Error: Into&lt;StdError&gt; + Send + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, B&gt; Service&lt;Request&lt;B&gt;&gt; for AeadServer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Aead,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HttpBody + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Error: Into&lt;StdError&gt; + Send + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, B&gt; Service&lt;Request&lt;B&gt;&gt; for DeterministicAeadServer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: DeterministicAead,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HttpBody + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Error: Into&lt;StdError&gt; + Send + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, B&gt; Service&lt;Request&lt;B&gt;&gt; for StreamingAeadServer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: StreamingAead,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HttpBody + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Error: Into&lt;StdError&gt; + Send + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, B&gt; Service&lt;Request&lt;B&gt;&gt; for MacServer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Mac,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HttpBody + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Error: Into&lt;StdError&gt; + Send + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, B&gt; Service&lt;Request&lt;B&gt;&gt; for HybridServer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Hybrid,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HttpBody + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Error: Into&lt;StdError&gt; + Send + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, B&gt; Service&lt;Request&lt;B&gt;&gt; for SignatureServer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Signature,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HttpBody + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Error: Into&lt;StdError&gt; + Send + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, B&gt; Service&lt;Request&lt;B&gt;&gt; for PrfSetServer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: PrfSet,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HttpBody + Send + Sync + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Error: Into&lt;StdError&gt; + Send + 'static,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()