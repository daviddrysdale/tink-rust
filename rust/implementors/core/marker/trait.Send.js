(function() {var implementors = {};
implementors["rinkey"] = [{"text":"impl !Send for KeysetReader","synthetic":true,"types":[]},{"text":"impl !Send for KeysetWriter","synthetic":true,"types":[]},{"text":"impl Send for KeyTemplate","synthetic":true,"types":[]},{"text":"impl Send for WrappingOptions","synthetic":true,"types":[]},{"text":"impl !Send for InOptions","synthetic":true,"types":[]},{"text":"impl !Send for OutOptions","synthetic":true,"types":[]},{"text":"impl !Send for PublicKeysetOptions","synthetic":true,"types":[]},{"text":"impl !Send for AddRotateOptions","synthetic":true,"types":[]},{"text":"impl !Send for ConvertKeysetOptions","synthetic":true,"types":[]},{"text":"impl !Send for CreateKeysetOptions","synthetic":true,"types":[]},{"text":"impl !Send for KeyIdOptions","synthetic":true,"types":[]},{"text":"impl Send for KeysetFormat","synthetic":true,"types":[]},{"text":"impl !Send for Command","synthetic":true,"types":[]}];
implementors["tink"] = [{"text":"impl !Send for Primitive","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for BinaryReader&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for BinaryWriter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Handle","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for JsonReader&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for JsonWriter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Manager","synthetic":true,"types":[]},{"text":"impl Send for MemReaderWriter","synthetic":true,"types":[]},{"text":"impl !Send for Entry","synthetic":true,"types":[]},{"text":"impl !Send for PrimitiveSet","synthetic":true,"types":[]},{"text":"impl Send for AesCmacParams","synthetic":true,"types":[]},{"text":"impl Send for AesCmacKey","synthetic":true,"types":[]},{"text":"impl Send for AesCmacKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesCmacPrfKey","synthetic":true,"types":[]},{"text":"impl Send for AesCmacPrfKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesCtrParams","synthetic":true,"types":[]},{"text":"impl Send for AesCtrKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesCtrKey","synthetic":true,"types":[]},{"text":"impl Send for HmacParams","synthetic":true,"types":[]},{"text":"impl Send for HmacKey","synthetic":true,"types":[]},{"text":"impl Send for HmacKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesCtrHmacAeadKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesCtrHmacAeadKey","synthetic":true,"types":[]},{"text":"impl Send for AesCtrHmacStreamingParams","synthetic":true,"types":[]},{"text":"impl Send for AesCtrHmacStreamingKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesCtrHmacStreamingKey","synthetic":true,"types":[]},{"text":"impl Send for AesEaxParams","synthetic":true,"types":[]},{"text":"impl Send for AesEaxKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesEaxKey","synthetic":true,"types":[]},{"text":"impl Send for AesGcmKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesGcmKey","synthetic":true,"types":[]},{"text":"impl Send for AesGcmHkdfStreamingParams","synthetic":true,"types":[]},{"text":"impl Send for AesGcmHkdfStreamingKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesGcmHkdfStreamingKey","synthetic":true,"types":[]},{"text":"impl Send for AesGcmSivKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesGcmSivKey","synthetic":true,"types":[]},{"text":"impl Send for AesSivKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for AesSivKey","synthetic":true,"types":[]},{"text":"impl Send for ChaCha20Poly1305KeyFormat","synthetic":true,"types":[]},{"text":"impl Send for ChaCha20Poly1305Key","synthetic":true,"types":[]},{"text":"impl Send for KeyTypeEntry","synthetic":true,"types":[]},{"text":"impl Send for RegistryConfig","synthetic":true,"types":[]},{"text":"impl Send for EcdsaParams","synthetic":true,"types":[]},{"text":"impl Send for EcdsaPublicKey","synthetic":true,"types":[]},{"text":"impl Send for EcdsaPrivateKey","synthetic":true,"types":[]},{"text":"impl Send for EcdsaKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for KeyTemplate","synthetic":true,"types":[]},{"text":"impl Send for KeyData","synthetic":true,"types":[]},{"text":"impl Send for Keyset","synthetic":true,"types":[]},{"text":"impl Send for KeysetInfo","synthetic":true,"types":[]},{"text":"impl Send for EncryptedKeyset","synthetic":true,"types":[]},{"text":"impl Send for EciesHkdfKemParams","synthetic":true,"types":[]},{"text":"impl Send for EciesAeadDemParams","synthetic":true,"types":[]},{"text":"impl Send for EciesAeadHkdfParams","synthetic":true,"types":[]},{"text":"impl Send for EciesAeadHkdfPublicKey","synthetic":true,"types":[]},{"text":"impl Send for EciesAeadHkdfPrivateKey","synthetic":true,"types":[]},{"text":"impl Send for EciesAeadHkdfKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for Ed25519KeyFormat","synthetic":true,"types":[]},{"text":"impl Send for Ed25519PublicKey","synthetic":true,"types":[]},{"text":"impl Send for Ed25519PrivateKey","synthetic":true,"types":[]},{"text":"impl Send for Empty","synthetic":true,"types":[]},{"text":"impl Send for HkdfPrfParams","synthetic":true,"types":[]},{"text":"impl Send for HkdfPrfKey","synthetic":true,"types":[]},{"text":"impl Send for HkdfPrfKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for HmacPrfParams","synthetic":true,"types":[]},{"text":"impl Send for HmacPrfKey","synthetic":true,"types":[]},{"text":"impl Send for HmacPrfKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for JwtHmacKey","synthetic":true,"types":[]},{"text":"impl Send for JwtHmacKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for KmsAeadKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for KmsAeadKey","synthetic":true,"types":[]},{"text":"impl Send for KmsEnvelopeAeadKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for KmsEnvelopeAeadKey","synthetic":true,"types":[]},{"text":"impl Send for PrfBasedDeriverParams","synthetic":true,"types":[]},{"text":"impl Send for PrfBasedDeriverKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for PrfBasedDeriverKey","synthetic":true,"types":[]},{"text":"impl Send for RsaSsaPkcs1Params","synthetic":true,"types":[]},{"text":"impl Send for RsaSsaPkcs1PublicKey","synthetic":true,"types":[]},{"text":"impl Send for RsaSsaPkcs1PrivateKey","synthetic":true,"types":[]},{"text":"impl Send for RsaSsaPkcs1KeyFormat","synthetic":true,"types":[]},{"text":"impl Send for RsaSsaPssParams","synthetic":true,"types":[]},{"text":"impl Send for RsaSsaPssPublicKey","synthetic":true,"types":[]},{"text":"impl Send for RsaSsaPssPrivateKey","synthetic":true,"types":[]},{"text":"impl Send for RsaSsaPssKeyFormat","synthetic":true,"types":[]},{"text":"impl Send for XChaCha20Poly1305KeyFormat","synthetic":true,"types":[]},{"text":"impl Send for XChaCha20Poly1305Key","synthetic":true,"types":[]},{"text":"impl Send for EllipticCurveType","synthetic":true,"types":[]},{"text":"impl Send for EcPointFormat","synthetic":true,"types":[]},{"text":"impl Send for HashType","synthetic":true,"types":[]},{"text":"impl Send for EcdsaSignatureEncoding","synthetic":true,"types":[]},{"text":"impl Send for KeyStatusType","synthetic":true,"types":[]},{"text":"impl Send for OutputPrefixType","synthetic":true,"types":[]},{"text":"impl Send for KeyMaterialType","synthetic":true,"types":[]},{"text":"impl Send for Key","synthetic":true,"types":[]},{"text":"impl Send for KeyInfo","synthetic":true,"types":[]},{"text":"impl Send for HashFunc","synthetic":true,"types":[]},{"text":"impl !Send for TinkError","synthetic":true,"types":[]}];
implementors["tink_aead"] = [{"text":"impl !Send for KmsEnvelopeAead","synthetic":true,"types":[]},{"text":"impl Send for AesCtr","synthetic":true,"types":[]},{"text":"impl Send for AesGcm","synthetic":true,"types":[]},{"text":"impl Send for ChaCha20Poly1305","synthetic":true,"types":[]},{"text":"impl !Send for EncryptThenAuthenticate","synthetic":true,"types":[]},{"text":"impl Send for XChaCha20Poly1305","synthetic":true,"types":[]}];
implementors["tink_awskms"] = [{"text":"impl Send for AwsClient","synthetic":true,"types":[]}];
implementors["tink_daead"] = [{"text":"impl Send for AesSiv","synthetic":true,"types":[]}];
implementors["tink_mac"] = [{"text":"impl Send for AesCmac","synthetic":true,"types":[]},{"text":"impl Send for Hmac","synthetic":true,"types":[]}];
implementors["tink_prf"] = [{"text":"impl !Send for Set","synthetic":true,"types":[]},{"text":"impl Send for AesCmacPrf","synthetic":true,"types":[]},{"text":"impl Send for HkdfPrf","synthetic":true,"types":[]},{"text":"impl Send for HmacPrf","synthetic":true,"types":[]}];
implementors["tink_signature"] = [{"text":"impl Send for EcdsaSigner","synthetic":true,"types":[]},{"text":"impl Send for EcdsaVerifier","synthetic":true,"types":[]},{"text":"impl Send for Ed25519Signer","synthetic":true,"types":[]},{"text":"impl Send for Ed25519Verifier","synthetic":true,"types":[]},{"text":"impl Send for EcdsaPrivateKey","synthetic":true,"types":[]},{"text":"impl Send for EcdsaPublicKey","synthetic":true,"types":[]}];
implementors["tink_testing_server"] = [{"text":"impl Send for Opt","synthetic":true,"types":[]},{"text":"impl Send for ServerInfoRequest","synthetic":true,"types":[]},{"text":"impl Send for ServerInfoResponse","synthetic":true,"types":[]},{"text":"impl Send for KeysetGenerateRequest","synthetic":true,"types":[]},{"text":"impl Send for KeysetGenerateResponse","synthetic":true,"types":[]},{"text":"impl Send for KeysetPublicRequest","synthetic":true,"types":[]},{"text":"impl Send for KeysetPublicResponse","synthetic":true,"types":[]},{"text":"impl Send for KeysetToJsonRequest","synthetic":true,"types":[]},{"text":"impl Send for KeysetToJsonResponse","synthetic":true,"types":[]},{"text":"impl Send for KeysetFromJsonRequest","synthetic":true,"types":[]},{"text":"impl Send for KeysetFromJsonResponse","synthetic":true,"types":[]},{"text":"impl Send for AeadEncryptRequest","synthetic":true,"types":[]},{"text":"impl Send for AeadEncryptResponse","synthetic":true,"types":[]},{"text":"impl Send for AeadDecryptRequest","synthetic":true,"types":[]},{"text":"impl Send for AeadDecryptResponse","synthetic":true,"types":[]},{"text":"impl Send for DeterministicAeadEncryptRequest","synthetic":true,"types":[]},{"text":"impl Send for DeterministicAeadEncryptResponse","synthetic":true,"types":[]},{"text":"impl Send for DeterministicAeadDecryptRequest","synthetic":true,"types":[]},{"text":"impl Send for DeterministicAeadDecryptResponse","synthetic":true,"types":[]},{"text":"impl Send for StreamingAeadEncryptRequest","synthetic":true,"types":[]},{"text":"impl Send for StreamingAeadEncryptResponse","synthetic":true,"types":[]},{"text":"impl Send for StreamingAeadDecryptRequest","synthetic":true,"types":[]},{"text":"impl Send for StreamingAeadDecryptResponse","synthetic":true,"types":[]},{"text":"impl Send for ComputeMacRequest","synthetic":true,"types":[]},{"text":"impl Send for ComputeMacResponse","synthetic":true,"types":[]},{"text":"impl Send for VerifyMacRequest","synthetic":true,"types":[]},{"text":"impl Send for VerifyMacResponse","synthetic":true,"types":[]},{"text":"impl Send for HybridEncryptRequest","synthetic":true,"types":[]},{"text":"impl Send for HybridEncryptResponse","synthetic":true,"types":[]},{"text":"impl Send for HybridDecryptRequest","synthetic":true,"types":[]},{"text":"impl Send for HybridDecryptResponse","synthetic":true,"types":[]},{"text":"impl Send for SignatureSignRequest","synthetic":true,"types":[]},{"text":"impl Send for SignatureSignResponse","synthetic":true,"types":[]},{"text":"impl Send for SignatureVerifyRequest","synthetic":true,"types":[]},{"text":"impl Send for SignatureVerifyResponse","synthetic":true,"types":[]},{"text":"impl Send for PrfSetKeyIdsRequest","synthetic":true,"types":[]},{"text":"impl Send for PrfSetKeyIdsResponse","synthetic":true,"types":[]},{"text":"impl Send for PrfSetComputeRequest","synthetic":true,"types":[]},{"text":"impl Send for PrfSetComputeResponse","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Output","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl Send for Result","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for MetadataClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for KeysetClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for AeadClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DeterministicAeadClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for StreamingAeadClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for MacClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for HybridClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SignatureClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for PrfSetClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for MetadataServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for _Inner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for KeysetServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for _Inner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for AeadServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for _Inner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for DeterministicAeadServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for _Inner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for StreamingAeadServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for _Inner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for MacServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for _Inner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for HybridServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for _Inner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SignatureServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for _Inner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for PrfSetServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for _Inner&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for AeadServerImpl","synthetic":true,"types":[]},{"text":"impl Send for DaeadServerImpl","synthetic":true,"types":[]},{"text":"impl Send for KeysetServerImpl","synthetic":true,"types":[]},{"text":"impl Send for MacServerImpl","synthetic":true,"types":[]},{"text":"impl Send for MetadataServerImpl","synthetic":true,"types":[]},{"text":"impl Send for PrfSetServerImpl","synthetic":true,"types":[]},{"text":"impl Send for SignatureServerImpl","synthetic":true,"types":[]}];
implementors["tink_testutil"] = [{"text":"impl Send for WycheproofSuite","synthetic":true,"types":[]},{"text":"impl Send for WycheproofGroup","synthetic":true,"types":[]},{"text":"impl Send for WycheproofCase","synthetic":true,"types":[]},{"text":"impl Send for DummyAeadKeyManager","synthetic":true,"types":[]},{"text":"impl Send for DummyAead","synthetic":true,"types":[]},{"text":"impl Send for DummyMac","synthetic":true,"types":[]},{"text":"impl Send for DummyKmsClient","synthetic":true,"types":[]},{"text":"impl Send for WycheproofResult","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()