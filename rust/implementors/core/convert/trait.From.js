(function() {var implementors = {};
implementors["tink"] = [{"text":"impl&lt;P:&nbsp;From&lt;Primitive&gt;&gt; From&lt;Entry&gt; for TypedEntry&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;From&lt;Primitive&gt;&gt; From&lt;PrimitiveSet&gt; for TypedPrimitiveSet&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;EllipticCurveType&gt; for i32","synthetic":false,"types":[]},{"text":"impl From&lt;EcPointFormat&gt; for i32","synthetic":false,"types":[]},{"text":"impl From&lt;HashType&gt; for i32","synthetic":false,"types":[]},{"text":"impl From&lt;EcdsaSignatureEncoding&gt; for i32","synthetic":false,"types":[]},{"text":"impl From&lt;KeyMaterialType&gt; for i32","synthetic":false,"types":[]},{"text":"impl From&lt;KeyStatusType&gt; for i32","synthetic":false,"types":[]},{"text":"impl From&lt;OutputPrefixType&gt; for i32","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; From&lt;&amp;'_ str&gt; for TinkError","synthetic":false,"types":[]},{"text":"impl From&lt;String&gt; for TinkError","synthetic":false,"types":[]},{"text":"impl From&lt;Primitive&gt; for Box&lt;dyn Aead&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Primitive&gt; for Box&lt;dyn DeterministicAead&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Primitive&gt; for Box&lt;dyn HybridDecrypt&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Primitive&gt; for Box&lt;dyn HybridEncrypt&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Primitive&gt; for Box&lt;dyn Mac&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Primitive&gt; for Box&lt;dyn Prf&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Primitive&gt; for Box&lt;dyn Signer&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Primitive&gt; for Box&lt;dyn StreamingAead&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Primitive&gt; for Box&lt;dyn Verifier&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()