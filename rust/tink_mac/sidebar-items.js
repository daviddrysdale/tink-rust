initSidebarItems({"constant":[["CMAC_KEY_VERSION","Maximal version of AES-CMAC keys."],["CMAC_TYPE_URL","Type URL of AES-CMAC keys that Tink supports."],["HMAC_KEY_VERSION","Maximal version of HMAC keys."],["HMAC_TYPE_URL","Type URL of HMAC keys that Tink supports."]],"fn":[["aes_cmac_tag128_key_template","Return a [`KeyTemplate`] that generates a AES-CMAC key with the following parameters:"],["hmac_sha256_tag128_key_template","Return a [`KeyTemplate`] that generates a HMAC key with the following parameters:"],["hmac_sha256_tag256_key_template","Return a [`KeyTemplate`] that generates a HMAC key with the following parameters:"],["hmac_sha512_tag256_key_template","Return a [`KeyTemplate`] that generates a HMAC key with the following parameters:"],["hmac_sha512_tag512_key_template","Return a [`KeyTemplate`] that generates a HMAC key with the following parameters:"],["init","Initialize the `tink-daead` crate, registering its primitives so they are available via Tink."],["new","Create a [`tink::Mac`] primitive from the given keyset handle."],["new_with_key_manager","Create a [`tink::Mac`] primitive from the given keyset handle and a custom key manager."]],"mod":[["subtle","Provides subtle implementations of the `tink::Mac` primitive."]]});